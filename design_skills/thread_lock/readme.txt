1.线程锁的作用

2.锁的分类：
    互斥锁：sleep-waiting, 没获取到锁的线程会进入到sleep状态
    条件锁：条件锁就是所谓的条件变量，某一个线程因为某个条件为满足时可以使用条件变量使改程序处于阻塞状态。一旦条件满足以“信号量”的方式唤醒一个因为该条件而被阻塞的线程。
    自旋锁：1.busy-waiting,没获取到锁的线程会不断尝试获取锁，
            2.在多处理器环境中对持有锁时间较短的程序来说使用自旋锁代替一般的互斥锁往往能提高程序的性能，
            3.因为自旋锁不会引起调用者睡眠，所以自旋锁的效率远高于互斥锁.
            4.注意，貌似得自己实现自旋锁
    读写锁：允许在数据库上同时执行多个“读”操作，但是某一时刻只能在数据库上有一个“写”操作。
    原子变量：对原子变量的操作是原子操作，能保证在任何情况下都不被打断，是线程安全的，不需要加锁

3.各种锁的用法
    见例程








tips:
1.编译报链接错误： 使用 g++ -pthread lock_guard.cpp